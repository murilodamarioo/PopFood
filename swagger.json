{
  "openapi": "3.0.1",
  "info": {
    "version": "1.0.0",
    "title": "PopFood",
    "description": "PopFood API Documentation"
  },
  "servers": [
    {
      "url": "http://localhost:3333",
      "description": "Development server"
    },
    {
      "url": "https://homol.popfood.com",
      "description": "Homologation server"
    },
    {
      "url": "https://popfood.com",
      "description": "Production server"
    }
  ],
  "paths": {
    "/users": {
      "post": {
        "summary": "Cria um novo usuário",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string",
                    "example": "John Doe"
                  },
                  "email": {
                    "type": "string",
                    "example": "john@email.com"
                  },
                  "password": {
                    "type": "string",
                    "example": "123"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created",
            "content":{
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": { "type": "string", "example": "Usuário criado com sucesso."
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "type": "object",
                      "properties": {
                        "message": { "type": "string", "example": "Este e-mail já está em uso."
                        }
                      }
                    },
                    {
                      "type": "object",
                      "properties": {
                        "message": { "type": "string", "example": "Todos os campos devem ser preenchidos."
                        }
                      }
                    }
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/sessions": {
      "post": {
        "summary": "Autenticação de usuário",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "email": {
                    "type":"string",
                    "example": "john@email.com"
                  },
                  "password": {
                    "type": "string",
                    "example": "123"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created" 
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": { "type": "string", "example":"Todos os campos devem ser preenchidos."
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": { "type": "string", "example": "E-mail ou senha inválido."
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/foods": {
      "get": {
        "summary": "Retorna todos os pratos",
        "parameters": [
          {
            "name": "search",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array", 
                  "items": {
                    "type": "object",
                    "properties": {
                      "id": { "type": "integer", "example": 13 },
                      "image": { "type": "string", "example": "e5588514bdb77fb4c674-salmao.jpg" },
                      "name": { "type": "string", "example": "Salada Ravanello" },
                      "category": { "type": "string", "example": "Salada" },
                      "price": { "type": "integer", "example": 9.99 },
                      "description": { "type": "string", "example": "Prato de salada Ravanello" },
                      "user_id": { "type": "integer", "example": 1 },
                      "created_at": { "type": "string", "example": "2024-09-02 01:44:03" },
                      "updated_at": { "type": "string", "example": "2024-09-02 01:44:03" }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "summary": "Cria um novo prato",
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "image": { "type": "file",  "example": "salmao.jpg" },
                  "name": { "type": "string", "example": "Salmão grelhado do Chef" },
                  "price": { "type": "integer", "example": 45 },
                  "category": { "type": "string", "example": "Peixe"  },
                  "description": { "type": "string", "example": "Salmão feito na grelha pelo Chef" },
                  "ingredients": { "type": "array", "example": ["Salmao", "Cebola", "temperos da casa"] }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created"
          },
          "400": {
            "description":"Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "type": "object",
                      "properties": {
                        "message": {"type": "string", "example": "Todos os campos devem ser preenchidos."
                        }
                      }
                    },
                    {
                      "type": "object",
                      "properties": {
                        "message": { "type": "string", "example": "Imagem do prato obrigatória"
                        }
                      }
                    }
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/foods/{id}": {
      "get": {
        "summary": "Busca um prato",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": false,
            "schema": {
              "type": "integer",
              "example": 45
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": { "type": "integer", "example": 45 },
                    "image": { "type": "string", "example": "image.jpg" },
                    "name": { "type": "string", "example": "Prato especial da casa" },
                    "category": { "type": "string", "example": "Especial" },
                    "price": { "type": "integer", "example": 45 },
                    "description": { "type": "string", "example": "Descrição do prato especial" },
                    "user_id": { "type": "integer", "example": 1 },
                    "created_at": { "type": "string", "example": "2024-09-02 01:44:03" },
                    "updated_at": { "type": "string", "example": "2024-09-02 01:44:03" },
                    "ingredients": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      },
                      "example": ["Temperos", "Cebola", "Iguarias"]
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": { "type": "string", "example": "Prato não encontrado" }
                  }
                }
              }
            }
          }
        }
      },
      "put": {
        "summary": "Atualiza um prato",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": false,
            "schema": {
              "type": "integer",
              "example": 45
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": { "type": "string", "example": "Prato especial da casa" },
                  "category": { "type": "string", "example": "Prato especial da casa" },
                  "price": { "type": "integer", "example": 60 },
                  "description": { "type": "string", "example": "Desscrição padrão de prato" },
                  "ingredients": { "type": "array", "example": ["Temperos", "Cebola", "Iguarias"] }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": { "type": "string", "example": "Prato atualizado com sucesso" }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": { "type": "string", "example": "Impossível de atualizar! Prato inexistente!" }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": { "type": "string", "example": "Todos os campos devem ser preenchidos." }
                  }
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "Exclui um prato",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": false,
            "schema": {
              "type": "integer",
              "example": 50
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": { "type": "string", "example": "Impossível de excluir! Prato inexistente!" }
                  }
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {}
}
